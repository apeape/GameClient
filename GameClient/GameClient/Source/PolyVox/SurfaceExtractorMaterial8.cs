/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace PolyVoxCore {

using System;
using System.Runtime.InteropServices;

public class SurfaceExtractorMaterial8 : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SurfaceExtractorMaterial8(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SurfaceExtractorMaterial8 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SurfaceExtractorMaterial8() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PolyVoxCorePINVOKE.delete_SurfaceExtractorMaterial8(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SurfaceExtractorMaterial8(VolumeMaterial8 volData, Region region, SurfaceMeshPositionMaterialNormal result) : this(PolyVoxCorePINVOKE.new_SurfaceExtractorMaterial8(VolumeMaterial8.getCPtr(volData), Region.getCPtr(region), SurfaceMeshPositionMaterialNormal.getCPtr(result)), true) {
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public void execute() {
    PolyVoxCorePINVOKE.SurfaceExtractorMaterial8_execute(swigCPtr);
  }

}

}
