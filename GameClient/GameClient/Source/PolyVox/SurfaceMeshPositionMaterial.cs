/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace PolyVoxCore {

using System;
using System.Runtime.InteropServices;

public class SurfaceMeshPositionMaterial : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SurfaceMeshPositionMaterial(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SurfaceMeshPositionMaterial obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SurfaceMeshPositionMaterial() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PolyVoxCorePINVOKE.delete_SurfaceMeshPositionMaterial(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SurfaceMeshPositionMaterial() : this(PolyVoxCorePINVOKE.new_SurfaceMeshPositionMaterial(), true) {
  }

  public uint32Vector getIndices() {
    uint32Vector ret = new uint32Vector(PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getIndices(swigCPtr), false);
    return ret;
  }

  public uint getNoOfIndices() {
    uint ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getNoOfIndices(swigCPtr);
    return ret;
  }

  public uint getNoOfNonUniformTrianges() {
    uint ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getNoOfNonUniformTrianges(swigCPtr);
    return ret;
  }

  public uint getNoOfUniformTrianges() {
    uint ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getNoOfUniformTrianges(swigCPtr);
    return ret;
  }

  public uint getNoOfVertices() {
    uint ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getNoOfVertices(swigCPtr);
    return ret;
  }

  public PositionMaterialVector getRawVertexData() {
    PositionMaterialVector ret = new PositionMaterialVector(PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getRawVertexData(swigCPtr), false);
    return ret;
  }

  public PositionMaterialVector getVertices() {
    PositionMaterialVector ret = new PositionMaterialVector(PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_getVertices(swigCPtr), false);
    return ret;
  }

  public void addTriangle(uint index0, uint index1, uint index2) {
    PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_addTriangle(swigCPtr, index0, index1, index2);
  }

  public void addTriangleCubic(uint index0, uint index1, uint index2) {
    PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_addTriangleCubic(swigCPtr, index0, index1, index2);
  }

  public uint addVertex(PositionMaterial vertex) {
    uint ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_addVertex(swigCPtr, PositionMaterial.getCPtr(vertex));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void clear() {
    PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_clear(swigCPtr);
  }

  public bool isEmpty() {
    bool ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_isEmpty(swigCPtr);
    return ret;
  }

  public int noOfDegenerateTris() {
    int ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_noOfDegenerateTris(swigCPtr);
    return ret;
  }

  public void removeDegenerateTris() {
    PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_removeDegenerateTris(swigCPtr);
  }

  public void removeUnusedVertices() {
    PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_removeUnusedVertices(swigCPtr);
  }

  public Region m_Region {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_Region_set(swigCPtr, Region.getCPtr(value));
    } 
    get {
      IntPtr cPtr = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_Region_get(swigCPtr);
      Region ret = (cPtr == IntPtr.Zero) ? null : new Region(cPtr, false);
      return ret;
    } 
  }

  public int m_iTimeStamp {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_iTimeStamp_set(swigCPtr, value);
    } 
    get {
      int ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_iTimeStamp_get(swigCPtr);
      return ret;
    } 
  }

  public int m_iNoOfLod0Tris {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_iNoOfLod0Tris_set(swigCPtr, value);
    } 
    get {
      int ret = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_iNoOfLod0Tris_get(swigCPtr);
      return ret;
    } 
  }

  public uint32Vector m_vecTriangleIndices {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_vecTriangleIndices_set(swigCPtr, uint32Vector.getCPtr(value));
    } 
    get {
      IntPtr cPtr = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_vecTriangleIndices_get(swigCPtr);
      uint32Vector ret = (cPtr == IntPtr.Zero) ? null : new uint32Vector(cPtr, false);
      return ret;
    } 
  }

  public PositionMaterialVector m_vecVertices {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_vecVertices_set(swigCPtr, PositionMaterialVector.getCPtr(value));
    } 
    get {
      IntPtr cPtr = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_vecVertices_get(swigCPtr);
      PositionMaterialVector ret = (cPtr == IntPtr.Zero) ? null : new PositionMaterialVector(cPtr, false);
      return ret;
    } 
  }

  public LodRecordVector m_vecLodRecords {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_vecLodRecords_set(swigCPtr, LodRecordVector.getCPtr(value));
    } 
    get {
      IntPtr cPtr = PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_vecLodRecords_get(swigCPtr);
      LodRecordVector ret = (cPtr == IntPtr.Zero) ? null : new LodRecordVector(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__setT_unsigned_char_t m_mapUsedMaterials {
    set {
      PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_mapUsedMaterials_set(swigCPtr, SWIGTYPE_p_std__setT_unsigned_char_t.getCPtr(value));
      if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_std__setT_unsigned_char_t ret = new SWIGTYPE_p_std__setT_unsigned_char_t(PolyVoxCorePINVOKE.SurfaceMeshPositionMaterial_m_mapUsedMaterials_get(swigCPtr), true);
      if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
