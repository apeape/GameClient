/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace PolyVoxCore {

using System;
using System.Runtime.InteropServices;

public class Region : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Region(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Region obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Region() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PolyVoxCorePINVOKE.delete_Region(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Region() : this(PolyVoxCorePINVOKE.new_Region__SWIG_0(), true) {
  }

  public Region(Vector3DInt16 v3dLowerCorner, Vector3DInt16 v3dUpperCorner) : this(PolyVoxCorePINVOKE.new_Region__SWIG_1(Vector3DInt16.getCPtr(v3dLowerCorner), Vector3DInt16.getCPtr(v3dUpperCorner)), true) {
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector3DInt16 getLowerCorner() {
    Vector3DInt16 ret = new Vector3DInt16(PolyVoxCorePINVOKE.Region_getLowerCorner(swigCPtr), false);
    return ret;
  }

  public Vector3DInt16 getUpperCorner() {
    Vector3DInt16 ret = new Vector3DInt16(PolyVoxCorePINVOKE.Region_getUpperCorner(swigCPtr), false);
    return ret;
  }

  public void setLowerCorner(Vector3DInt16 v3dLowerCorner) {
    PolyVoxCorePINVOKE.Region_setLowerCorner(swigCPtr, Vector3DInt16.getCPtr(v3dLowerCorner));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setUpperCorner(Vector3DInt16 v3dUpperCorner) {
    PolyVoxCorePINVOKE.Region_setUpperCorner(swigCPtr, Vector3DInt16.getCPtr(v3dUpperCorner));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public bool containsPoint(Vector3DFloat pos, float boundary) {
    bool ret = PolyVoxCorePINVOKE.Region_containsPoint__SWIG_0(swigCPtr, Vector3DFloat.getCPtr(pos), boundary);
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool containsPoint(Vector3DFloat pos) {
    bool ret = PolyVoxCorePINVOKE.Region_containsPoint__SWIG_1(swigCPtr, Vector3DFloat.getCPtr(pos));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool containsPoint(Vector3DInt16 pos, byte boundary) {
    bool ret = PolyVoxCorePINVOKE.Region_containsPoint__SWIG_2(swigCPtr, Vector3DInt16.getCPtr(pos), boundary);
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool containsPoint(Vector3DInt16 pos) {
    bool ret = PolyVoxCorePINVOKE.Region_containsPoint__SWIG_3(swigCPtr, Vector3DInt16.getCPtr(pos));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void cropTo(Region other) {
    PolyVoxCorePINVOKE.Region_cropTo(swigCPtr, Region.getCPtr(other));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public short depth() {
    short ret = PolyVoxCorePINVOKE.Region_depth(swigCPtr);
    return ret;
  }

  public short height() {
    short ret = PolyVoxCorePINVOKE.Region_height(swigCPtr);
    return ret;
  }

  public void shift(Vector3DInt16 amount) {
    PolyVoxCorePINVOKE.Region_shift(swigCPtr, Vector3DInt16.getCPtr(amount));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public void shiftLowerCorner(Vector3DInt16 amount) {
    PolyVoxCorePINVOKE.Region_shiftLowerCorner(swigCPtr, Vector3DInt16.getCPtr(amount));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public void shiftUpperCorner(Vector3DInt16 amount) {
    PolyVoxCorePINVOKE.Region_shiftUpperCorner(swigCPtr, Vector3DInt16.getCPtr(amount));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector3DInt16 dimensions() {
    Vector3DInt16 ret = new Vector3DInt16(PolyVoxCorePINVOKE.Region_dimensions(swigCPtr), true);
    return ret;
  }

  public short width() {
    short ret = PolyVoxCorePINVOKE.Region_width(swigCPtr);
    return ret;
  }

}

}
