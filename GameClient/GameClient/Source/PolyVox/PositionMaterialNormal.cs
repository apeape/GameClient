/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace PolyVoxCore {

using System;
using System.Runtime.InteropServices;

public class PositionMaterialNormal : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PositionMaterialNormal(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PositionMaterialNormal obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PositionMaterialNormal() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PolyVoxCorePINVOKE.delete_PositionMaterialNormal(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public PositionMaterialNormal() : this(PolyVoxCorePINVOKE.new_PositionMaterialNormal__SWIG_0(), true) {
  }

  public PositionMaterialNormal(Vector3DFloat positionToSet, float materialToSet) : this(PolyVoxCorePINVOKE.new_PositionMaterialNormal__SWIG_1(Vector3DFloat.getCPtr(positionToSet), materialToSet), true) {
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public PositionMaterialNormal(Vector3DFloat positionToSet, Vector3DFloat normalToSet, float materialToSet) : this(PolyVoxCorePINVOKE.new_PositionMaterialNormal__SWIG_2(Vector3DFloat.getCPtr(positionToSet), Vector3DFloat.getCPtr(normalToSet), materialToSet), true) {
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public float getMaterial() {
    float ret = PolyVoxCorePINVOKE.PositionMaterialNormal_getMaterial(swigCPtr);
    return ret;
  }

  public Vector3DFloat getNormal() {
    Vector3DFloat ret = new Vector3DFloat(PolyVoxCorePINVOKE.PositionMaterialNormal_getNormal(swigCPtr), false);
    return ret;
  }

  public Vector3DFloat getPosition() {
    Vector3DFloat ret = new Vector3DFloat(PolyVoxCorePINVOKE.PositionMaterialNormal_getPosition(swigCPtr), false);
    return ret;
  }

  public void setMaterial(float materialToSet) {
    PolyVoxCorePINVOKE.PositionMaterialNormal_setMaterial(swigCPtr, materialToSet);
  }

  public void setNormal(Vector3DFloat normalToSet) {
    PolyVoxCorePINVOKE.PositionMaterialNormal_setNormal(swigCPtr, Vector3DFloat.getCPtr(normalToSet));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setPosition(Vector3DFloat positionToSet) {
    PolyVoxCorePINVOKE.PositionMaterialNormal_setPosition(swigCPtr, Vector3DFloat.getCPtr(positionToSet));
    if (PolyVoxCorePINVOKE.SWIGPendingException.Pending) throw PolyVoxCorePINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector3DFloat position {
    set {
      PolyVoxCorePINVOKE.PositionMaterialNormal_position_set(swigCPtr, Vector3DFloat.getCPtr(value));
    } 
    get {
      IntPtr cPtr = PolyVoxCorePINVOKE.PositionMaterialNormal_position_get(swigCPtr);
      Vector3DFloat ret = (cPtr == IntPtr.Zero) ? null : new Vector3DFloat(cPtr, false);
      return ret;
    } 
  }

  public Vector3DFloat normal {
    set {
      PolyVoxCorePINVOKE.PositionMaterialNormal_normal_set(swigCPtr, Vector3DFloat.getCPtr(value));
    } 
    get {
      IntPtr cPtr = PolyVoxCorePINVOKE.PositionMaterialNormal_normal_get(swigCPtr);
      Vector3DFloat ret = (cPtr == IntPtr.Zero) ? null : new Vector3DFloat(cPtr, false);
      return ret;
    } 
  }

  public float material {
    set {
      PolyVoxCorePINVOKE.PositionMaterialNormal_material_set(swigCPtr, value);
    } 
    get {
      float ret = PolyVoxCorePINVOKE.PositionMaterialNormal_material_get(swigCPtr);
      return ret;
    } 
  }

}

}
