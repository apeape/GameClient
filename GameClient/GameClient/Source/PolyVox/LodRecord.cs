/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace PolyVoxCore {

using System;
using System.Runtime.InteropServices;

public class LodRecord : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal LodRecord(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(LodRecord obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~LodRecord() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PolyVoxCorePINVOKE.delete_LodRecord(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int beginIndex {
    set {
      PolyVoxCorePINVOKE.LodRecord_beginIndex_set(swigCPtr, value);
    } 
    get {
      int ret = PolyVoxCorePINVOKE.LodRecord_beginIndex_get(swigCPtr);
      return ret;
    } 
  }

  public int endIndex {
    set {
      PolyVoxCorePINVOKE.LodRecord_endIndex_set(swigCPtr, value);
    } 
    get {
      int ret = PolyVoxCorePINVOKE.LodRecord_endIndex_get(swigCPtr);
      return ret;
    } 
  }

  public LodRecord() : this(PolyVoxCorePINVOKE.new_LodRecord(), true) {
  }

}

}
